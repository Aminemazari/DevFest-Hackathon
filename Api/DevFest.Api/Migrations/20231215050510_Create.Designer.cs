// <auto-generated />
using System;
using DevFest.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevFest.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231215050510_Create")]
    partial class Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DevFest.Api.Entities.Help", b =>
                {
                    b.Property<Guid>("Help_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Help_Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Project_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("StillAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Help_Id");

                    b.ToTable("Helps");
                });

            modelBuilder.Entity("DevFest.Api.Entities.Idea", b =>
                {
                    b.Property<Guid>("Idea_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Idea_Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Suggester_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idea_Id");

                    b.ToTable("Ideas");
                });

            modelBuilder.Entity("DevFest.Api.Entities.Project", b =>
                {
                    b.Property<Guid>("Project_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Project_Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GithubRepoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Idea_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Project_Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DevFest.Api.Entities.Tag", b =>
                {
                    b.Property<Guid>("Tag_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Tag_Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Tag_Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DevFest.Api.Entities.User", b =>
                {
                    b.Property<Guid>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("User_Id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DevFest.Api.Entities.UserInProject", b =>
                {
                    b.Property<Guid>("UserInProject_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserInProject_Id");

                    b.Property<Guid>("Project_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserInProject_Id");

                    b.ToTable("UserInProjects");
                });

            modelBuilder.Entity("DevFest.Api.Entities.XHaveTag", b =>
                {
                    b.Property<Guid>("XHaveTag_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("XHaveTag_Id");

                    b.Property<Guid>("Tag_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("X_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("XHaveTag_Id");

                    b.ToTable("XHaveTags");
                });
#pragma warning restore 612, 618
        }
    }
}
